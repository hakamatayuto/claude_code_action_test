"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/taskUtils.ts":
/*!**************************!*\
  !*** ./lib/taskUtils.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; },\n/* harmony export */   generateDateRange: function() { return /* binding */ generateDateRange; },\n/* harmony export */   loadTasks: function() { return /* binding */ loadTasks; },\n/* harmony export */   processTasks: function() { return /* binding */ processTasks; }\n/* harmony export */ });\nasync function loadTasks() {\n    try {\n        const apiUrl =  true ? \"/api/tasks\" : 0;\n        console.log(\"Fetching tasks from:\", apiUrl);\n        const response = await fetch(apiUrl);\n        console.log(\"Response status:\", response.status);\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error(\"API error response:\", errorText);\n            throw new Error(\"HTTP error! status: \".concat(response.status, \", message: \").concat(errorText));\n        }\n        const tasks = await response.json();\n        console.log(\"Loaded tasks:\", tasks);\n        return tasks;\n    } catch (error) {\n        console.error(\"タスクの読み込みに失敗しました:\", error);\n        throw error // エラーを再スローして上位でキャッチ\n        ;\n    }\n}\nfunction processTasks(tasks) {\n    if (tasks.length === 0) {\n        const now = new Date();\n        return {\n            processedTasks: [],\n            startDate: now,\n            endDate: now,\n            totalDays: 0\n        };\n    }\n    const processedTasks = tasks.map((task)=>{\n        const startDate = new Date(task.開始日);\n        const endDate = new Date(task.終了日);\n        const duration = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n        return {\n            ...task,\n            startDate,\n            endDate,\n            duration,\n            startOffset: 0 // 後で計算\n        };\n    });\n    // 全体の開始日と終了日を計算\n    const allStartDates = processedTasks.map((task)=>task.startDate);\n    const allEndDates = processedTasks.map((task)=>task.endDate);\n    const projectStartDate = new Date(Math.min(...allStartDates.map((date)=>date.getTime())));\n    const projectEndDate = new Date(Math.max(...allEndDates.map((date)=>date.getTime())));\n    const totalDays = Math.ceil((projectEndDate.getTime() - projectStartDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n    // 各タスクの開始オフセットを計算\n    processedTasks.forEach((task)=>{\n        task.startOffset = Math.ceil((task.startDate.getTime() - projectStartDate.getTime()) / (1000 * 60 * 60 * 24));\n    });\n    return {\n        processedTasks,\n        startDate: projectStartDate,\n        endDate: projectEndDate,\n        totalDays\n    };\n}\nfunction formatDate(date) {\n    return date.toLocaleDateString(\"ja-JP\", {\n        month: \"short\",\n        day: \"numeric\"\n    });\n}\nfunction generateDateRange(startDate, totalDays) {\n    const dates = [];\n    for(let i = 0; i < totalDays; i++){\n        const date = new Date(startDate);\n        date.setDate(startDate.getDate() + i);\n        dates.push(date);\n    }\n    return dates;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxNQUFNdUIsUUFBZ0IsRUFBRTtJQUN4QixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSXhCLFdBQVd3QixJQUFLO1FBQ2xDLE1BQU1WLE9BQU8sSUFBSWxCLEtBQUtFO1FBQ3RCZ0IsS0FBS1csT0FBTyxDQUFDM0IsVUFBVTRCLE9BQU8sS0FBS0Y7UUFDbkNELE1BQU1JLElBQUksQ0FBQ2I7SUFDYjtJQUNBLE9BQU9TO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3Rhc2tVdGlscy50cz9kYzgyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgVGFzayB7XG4gIOOCv+OCueOCr+WQjTogc3RyaW5nXG4gIOaLheW9k+iAhTogc3RyaW5nXG4gIOmWi+Wni+aXpTogc3RyaW5nXG4gIOe1guS6huaXpTogc3RyaW5nXG4gIOips+e0sDogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFza0RhdGEge1xuICB0YXNrczogVGFza1tdXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvY2Vzc2VkVGFzayBleHRlbmRzIFRhc2sge1xuICBzdGFydERhdGU6IERhdGVcbiAgZW5kRGF0ZTogRGF0ZVxuICBkdXJhdGlvbjogbnVtYmVyXG4gIHN0YXJ0T2Zmc2V0OiBudW1iZXJcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRUYXNrcygpOiBQcm9taXNlPFRhc2tbXT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGFwaVVybCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnIFxuICAgICAgPyAnL2FwaS90YXNrcycgXG4gICAgICA6IGBodHRwOi8vbG9jYWxob3N0OiR7cHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAxfS9hcGkvdGFza3NgXG4gICAgXG4gICAgY29uc29sZS5sb2coJ0ZldGNoaW5nIHRhc2tzIGZyb206JywgYXBpVXJsKVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYXBpVXJsKVxuICAgIGNvbnNvbGUubG9nKCdSZXNwb25zZSBzdGF0dXM6JywgcmVzcG9uc2Uuc3RhdHVzKVxuICAgIFxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKVxuICAgICAgY29uc29sZS5lcnJvcignQVBJIGVycm9yIHJlc3BvbnNlOicsIGVycm9yVGV4dClcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c30sIG1lc3NhZ2U6ICR7ZXJyb3JUZXh0fWApXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHRhc2tzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgY29uc29sZS5sb2coJ0xvYWRlZCB0YXNrczonLCB0YXNrcylcbiAgICByZXR1cm4gdGFza3NcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCfjgr/jgrnjgq/jga7oqq3jgb/ovrzjgb/jgavlpLHmlZfjgZfjgb7jgZfjgZ86JywgZXJyb3IpXG4gICAgdGhyb3cgZXJyb3IgLy8g44Ko44Op44O844KS5YaN44K544Ot44O844GX44Gm5LiK5L2N44Gn44Kt44Oj44OD44OBXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3NUYXNrcyh0YXNrczogVGFza1tdKToge1xuICBwcm9jZXNzZWRUYXNrczogUHJvY2Vzc2VkVGFza1tdXG4gIHN0YXJ0RGF0ZTogRGF0ZVxuICBlbmREYXRlOiBEYXRlXG4gIHRvdGFsRGF5czogbnVtYmVyXG59IHtcbiAgaWYgKHRhc2tzLmxlbmd0aCA9PT0gMCkge1xuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKClcbiAgICByZXR1cm4ge1xuICAgICAgcHJvY2Vzc2VkVGFza3M6IFtdLFxuICAgICAgc3RhcnREYXRlOiBub3csXG4gICAgICBlbmREYXRlOiBub3csXG4gICAgICB0b3RhbERheXM6IDBcbiAgICB9XG4gIH1cblxuICBjb25zdCBwcm9jZXNzZWRUYXNrczogUHJvY2Vzc2VkVGFza1tdID0gdGFza3MubWFwKHRhc2sgPT4ge1xuICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKHRhc2su6ZaL5aeL5pelKVxuICAgIGNvbnN0IGVuZERhdGUgPSBuZXcgRGF0ZSh0YXNrLue1guS6huaXpSlcbiAgICBjb25zdCBkdXJhdGlvbiA9IE1hdGguY2VpbCgoZW5kRGF0ZS5nZXRUaW1lKCkgLSBzdGFydERhdGUuZ2V0VGltZSgpKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KSkgKyAxXG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLnRhc2ssXG4gICAgICBzdGFydERhdGUsXG4gICAgICBlbmREYXRlLFxuICAgICAgZHVyYXRpb24sXG4gICAgICBzdGFydE9mZnNldDogMCAvLyDlvozjgafoqIjnrpdcbiAgICB9XG4gIH0pXG5cbiAgLy8g5YWo5L2T44Gu6ZaL5aeL5pel44Go57WC5LqG5pel44KS6KiI566XXG4gIGNvbnN0IGFsbFN0YXJ0RGF0ZXMgPSBwcm9jZXNzZWRUYXNrcy5tYXAodGFzayA9PiB0YXNrLnN0YXJ0RGF0ZSlcbiAgY29uc3QgYWxsRW5kRGF0ZXMgPSBwcm9jZXNzZWRUYXNrcy5tYXAodGFzayA9PiB0YXNrLmVuZERhdGUpXG4gIFxuICBjb25zdCBwcm9qZWN0U3RhcnREYXRlID0gbmV3IERhdGUoTWF0aC5taW4oLi4uYWxsU3RhcnREYXRlcy5tYXAoZGF0ZSA9PiBkYXRlLmdldFRpbWUoKSkpKVxuICBjb25zdCBwcm9qZWN0RW5kRGF0ZSA9IG5ldyBEYXRlKE1hdGgubWF4KC4uLmFsbEVuZERhdGVzLm1hcChkYXRlID0+IGRhdGUuZ2V0VGltZSgpKSkpXG4gIFxuICBjb25zdCB0b3RhbERheXMgPSBNYXRoLmNlaWwoKHByb2plY3RFbmREYXRlLmdldFRpbWUoKSAtIHByb2plY3RTdGFydERhdGUuZ2V0VGltZSgpKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KSkgKyAxXG5cbiAgLy8g5ZCE44K/44K544Kv44Gu6ZaL5aeL44Kq44OV44K744OD44OI44KS6KiI566XXG4gIHByb2Nlc3NlZFRhc2tzLmZvckVhY2godGFzayA9PiB7XG4gICAgdGFzay5zdGFydE9mZnNldCA9IE1hdGguY2VpbCgodGFzay5zdGFydERhdGUuZ2V0VGltZSgpIC0gcHJvamVjdFN0YXJ0RGF0ZS5nZXRUaW1lKCkpIC8gKDEwMDAgKiA2MCAqIDYwICogMjQpKVxuICB9KVxuXG4gIHJldHVybiB7XG4gICAgcHJvY2Vzc2VkVGFza3MsXG4gICAgc3RhcnREYXRlOiBwcm9qZWN0U3RhcnREYXRlLFxuICAgIGVuZERhdGU6IHByb2plY3RFbmREYXRlLFxuICAgIHRvdGFsRGF5c1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlKGRhdGU6IERhdGUpOiBzdHJpbmcge1xuICByZXR1cm4gZGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoJ2phLUpQJywge1xuICAgIG1vbnRoOiAnc2hvcnQnLFxuICAgIGRheTogJ251bWVyaWMnXG4gIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZURhdGVSYW5nZShzdGFydERhdGU6IERhdGUsIHRvdGFsRGF5czogbnVtYmVyKTogRGF0ZVtdIHtcbiAgY29uc3QgZGF0ZXM6IERhdGVbXSA9IFtdXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdG90YWxEYXlzOyBpKyspIHtcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoc3RhcnREYXRlKVxuICAgIGRhdGUuc2V0RGF0ZShzdGFydERhdGUuZ2V0RGF0ZSgpICsgaSlcbiAgICBkYXRlcy5wdXNoKGRhdGUpXG4gIH1cbiAgcmV0dXJuIGRhdGVzXG59Il0sIm5hbWVzIjpbImxvYWRUYXNrcyIsImFwaVVybCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJzdGF0dXMiLCJvayIsImVycm9yVGV4dCIsInRleHQiLCJlcnJvciIsIkVycm9yIiwidGFza3MiLCJqc29uIiwicHJvY2Vzc1Rhc2tzIiwibGVuZ3RoIiwibm93IiwiRGF0ZSIsInByb2Nlc3NlZFRhc2tzIiwic3RhcnREYXRlIiwiZW5kRGF0ZSIsInRvdGFsRGF5cyIsIm1hcCIsInRhc2siLCLplovlp4vml6UiLCLntYLkuobml6UiLCJkdXJhdGlvbiIsIk1hdGgiLCJjZWlsIiwiZ2V0VGltZSIsInN0YXJ0T2Zmc2V0IiwiYWxsU3RhcnREYXRlcyIsImFsbEVuZERhdGVzIiwicHJvamVjdFN0YXJ0RGF0ZSIsIm1pbiIsImRhdGUiLCJwcm9qZWN0RW5kRGF0ZSIsIm1heCIsImZvckVhY2giLCJmb3JtYXREYXRlIiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwibW9udGgiLCJkYXkiLCJnZW5lcmF0ZURhdGVSYW5nZSIsImRhdGVzIiwiaSIsInNldERhdGUiLCJnZXREYXRlIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/taskUtils.ts\n"));

/***/ })

});